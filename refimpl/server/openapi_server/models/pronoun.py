from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Pronoun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subject=None, object=None, possessive=None, possessive_determiner=None, reflexive=None):  # noqa: E501
        """Pronoun - a model defined in OpenAPI

        :param subject: The subject of this Pronoun.  # noqa: E501
        :type subject: str
        :param object: The object of this Pronoun.  # noqa: E501
        :type object: str
        :param possessive: The possessive of this Pronoun.  # noqa: E501
        :type possessive: str
        :param possessive_determiner: The possessive_determiner of this Pronoun.  # noqa: E501
        :type possessive_determiner: str
        :param reflexive: The reflexive of this Pronoun.  # noqa: E501
        :type reflexive: str
        """
        self.openapi_types = {
            'subject': str,
            'object': str,
            'possessive': str,
            'possessive_determiner': str,
            'reflexive': str
        }

        self.attribute_map = {
            'subject': 'subject',
            'object': 'object',
            'possessive': 'possessive',
            'possessive_determiner': 'possessive_determiner',
            'reflexive': 'reflexive'
        }

        self._subject = subject
        self._object = object
        self._possessive = possessive
        self._possessive_determiner = possessive_determiner
        self._reflexive = reflexive

    @classmethod
    def from_dict(cls, dikt) -> 'Pronoun':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pronoun of this Pronoun.  # noqa: E501
        :rtype: Pronoun
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject(self) -> str:
        """Gets the subject of this Pronoun.

        The subject pronoun  # noqa: E501

        :return: The subject of this Pronoun.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject: str):
        """Sets the subject of this Pronoun.

        The subject pronoun  # noqa: E501

        :param subject: The subject of this Pronoun.
        :type subject: str
        """

        self._subject = subject

    @property
    def object(self) -> str:
        """Gets the object of this Pronoun.

        The object pronoun  # noqa: E501

        :return: The object of this Pronoun.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object: str):
        """Sets the object of this Pronoun.

        The object pronoun  # noqa: E501

        :param object: The object of this Pronoun.
        :type object: str
        """

        self._object = object

    @property
    def possessive(self) -> str:
        """Gets the possessive of this Pronoun.

        The possessive pronoun  # noqa: E501

        :return: The possessive of this Pronoun.
        :rtype: str
        """
        return self._possessive

    @possessive.setter
    def possessive(self, possessive: str):
        """Sets the possessive of this Pronoun.

        The possessive pronoun  # noqa: E501

        :param possessive: The possessive of this Pronoun.
        :type possessive: str
        """

        self._possessive = possessive

    @property
    def possessive_determiner(self) -> str:
        """Gets the possessive_determiner of this Pronoun.

        The possessive determiner  # noqa: E501

        :return: The possessive_determiner of this Pronoun.
        :rtype: str
        """
        return self._possessive_determiner

    @possessive_determiner.setter
    def possessive_determiner(self, possessive_determiner: str):
        """Sets the possessive_determiner of this Pronoun.

        The possessive determiner  # noqa: E501

        :param possessive_determiner: The possessive_determiner of this Pronoun.
        :type possessive_determiner: str
        """

        self._possessive_determiner = possessive_determiner

    @property
    def reflexive(self) -> str:
        """Gets the reflexive of this Pronoun.

        The reflexive pronoun  # noqa: E501

        :return: The reflexive of this Pronoun.
        :rtype: str
        """
        return self._reflexive

    @reflexive.setter
    def reflexive(self, reflexive: str):
        """Sets the reflexive of this Pronoun.

        The reflexive pronoun  # noqa: E501

        :param reflexive: The reflexive of this Pronoun.
        :type reflexive: str
        """

        self._reflexive = reflexive
