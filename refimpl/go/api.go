/*
 * DCIDDP
 *
 * The Decentralised Identity Dispatch Protocol (DCIDDP) is a protocol that allows for dispension  of name and pronoun information in a decentralised manner, for rendering in a user interface.  The protocol is designed to be simple, lightweight, and easy to implement. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// DefaultAPIRouter defines the required methods for binding the api requests to a responses for the DefaultAPI
// The DefaultAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultAPIServicer to perform the required actions, then write the service results to the http response.
type DefaultAPIRouter interface { 
	SystemPost(http.ResponseWriter, *http.Request)
	SystemSystemFrontersGet(http.ResponseWriter, *http.Request)
	SystemSystemFrontersPut(http.ResponseWriter, *http.Request)
	SystemSystemGet(http.ResponseWriter, *http.Request)
	SystemSystemMemberMemberGet(http.ResponseWriter, *http.Request)
	SystemSystemMemberMemberPronounsGet(http.ResponseWriter, *http.Request)
	SystemSystemMembersPost(http.ResponseWriter, *http.Request)
}


// DefaultAPIServicer defines the api actions for the DefaultAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultAPIServicer interface { 
	SystemPost(context.Context, PartialSystem) (ImplResponse, error)
	SystemSystemFrontersGet(context.Context, string) (ImplResponse, error)
	SystemSystemFrontersPut(context.Context, string, []string) (ImplResponse, error)
	SystemSystemGet(context.Context, string) (ImplResponse, error)
	SystemSystemMemberMemberGet(context.Context, string, string) (ImplResponse, error)
	SystemSystemMemberMemberPronounsGet(context.Context, string, string) (ImplResponse, error)
	SystemSystemMembersPost(context.Context, string, PartialMember) (ImplResponse, error)
}
