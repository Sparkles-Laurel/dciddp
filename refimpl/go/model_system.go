/*
 * DCIDDP
 *
 * The Decentralised Identity Dispatch Protocol (DCIDDP) is a protocol that allows for dispension  of name and pronoun information in a decentralised manner, for rendering in a user interface.  The protocol is designed to be simple, lightweight, and easy to implement. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




type System struct {

	// The ID of the system
	Id string `json:"id,omitempty"`

	// The name of the system
	Name string `json:"name,omitempty"`

	// The pronouns of the system
	Pronouns string `json:"pronouns,omitempty"`

	// The current fronter of the system
	Fronters []Fronter `json:"fronters,omitempty"`

	// The members of the system
	Members []Member `json:"members,omitempty"`
}

// AssertSystemRequired checks if the required fields are not zero-ed
func AssertSystemRequired(obj System) error {
	for _, el := range obj.Fronters {
		if err := AssertFronterRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Members {
		if err := AssertMemberRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSystemConstraints checks if the values respects the defined constraints
func AssertSystemConstraints(obj System) error {
	return nil
}
